@model QLyNhaHangTDeli.Models.RegisterViewModel

@{
    ViewBag.Title = "Đăng ký";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}



@using (Html.BeginForm("Register", "Users", FormMethod.Post, new { id = "registerForm" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.IsEmployee)

    <div class="bg-white rounded-lg shadow-lg overflow-hidden max-w-3xl w-full flex flex-col md:flex-row h-auto md:h-[60vh]">
        <!-- Left Section -->
        <div class="bg-green-700 text-white p-8 md:w-1/2 flex flex-col justify-center items-center text-center">
             @{
                string imageUrl = QLyNhaHangTDeli.Services.ImageHelper.GetImageUrl("logoTdeli", Url);
            }
            <a href="/Home/Index">

                <img id="logo" alt="Blueflame logo" class="mb-4 w-40" src="@imageUrl" />
            </a>
            <h1 class="text-2xl font-bold mb-2">Chào mừng!</h1>
            <p class="mb-4">Bạn đã có tài khoản?</p>
            <a href="@Url.Action("Login", "Users")" class="bg-transparent border border-white text-white py-2 px-4 rounded-full inline-block">
                Đăng nhập
            </a>
        </div>

        <!-- Right Section -->
        <div class="p-6 md:p-8 w-full md:w-1/2 flex flex-col justify-center items-center">
            <h2 class="text-2xl font-bold text-green-700 mb-2">Đăng ký</h2>

            <div class="w-full max-w-sm">
                @Html.TextBoxFor(model => model.FullName, new { @class = "w-full p-3 mb-3 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-green-500", placeholder = "Họ và tên..." })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-red-500" })

                @Html.TextBoxFor(model => model.ContactInfo, new { @class = "w-full p-3 mb-3 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-green-500", placeholder = "Email..." , autocomplete = "username" })
                @Html.ValidationMessageFor(model => model.ContactInfo, "", new { @class = "text-red-500" })

                @Html.PasswordFor(model => model.Password, new { @class = "w-full p-3 mb-3 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-green-500", placeholder = "Mật khẩu..." , autocomplete = "new-password" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-red-500" })

                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "w-full p-3 mb-3 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-green-500", placeholder = "Xác nhận mật khẩu...", autocomplete = "new-password"  })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-red-500" })
                @Html.ValidationSummary(true, "", new { @class = "text-sm text-red-500" })

                <button class="mt-2 bg-green-600 hover:bg-green-500 text-white font-bold py-2 px-4 rounded-full w-full" type="submit" id="regis-btn">
                    Đăng ký
                </button>
            </div>
        </div>
    </div>

    <script type="text/javascript">
         var isEmployee = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.IsEmployee).ToLower());
    </script>
    <script>
    $(document).ready(function () {
        $("#registerForm").submit(function (e) {
            e.preventDefault(); // Ngăn form gửi đi mặc định

            var formData = $(this).serializeArray(); // Lấy toàn bộ dữ liệu form
            $.ajax({
                url: "/Users/Register",
                type: "POST",
                data: formData,
                dataType: "json",
                success: function (response) {
                    if (response.success) {
                        if (isEmployee) {
                            // Nếu là nhân viên (checkbox được tick), chuyển hướng đến trang đăng nhập thành công
                            window.location.href = "/Users/Login"; // Thay đổi URL theo trang bạn muốn chuyển
                        } else {
                            // Nếu không phải nhân viên (checkbox chưa tick), mở modal OTP
                            loadOtpModal();
                        }

                    } else {
                        Swal.fire({
                            icon: "error",
                            title: "Đăng ký thất bại",
                            text: response.message
                        });
                    }
                },
                error: function () {
                    Swal.fire({
                        icon: "error",
                        title: "Lỗi hệ thống",
                        text: "Có lỗi xảy ra, vui lòng thử lại."
                    });
                }
            });
        });

        function loadOtpModal() {
            $.ajax({
                url: "/Users/VerifyOTP", // Lấy modal nhập OTP
                type: "GET",
                success: function (partialView) {
                    $("#modalContent").html(partialView); // Gán nội dung modal
                    $("#boxModal").removeClass("hidden"); // Hiện modal
                },
                error: function () {
                    Swal.fire({
                        icon: "error",
                        title: "Lỗi tải modal",
                        text: "Có lỗi xảy ra, không thể tải modal OTP."
                    });
                }
            });
        }

         $('#registerLink').click(function (e) {
        e.preventDefault();
        var isEmployee = $('#isEmployee').is(':checked');
        var registerUrl = '@Url.Action("Register", "Users")' + '?isEmployee=' + isEmployee;
        window.location.href = registerUrl;
    });
    });
    </script>
}
