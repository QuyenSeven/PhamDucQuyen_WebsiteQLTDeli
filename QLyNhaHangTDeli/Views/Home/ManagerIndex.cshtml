
@{
    ViewBag.Title = "Quản lý";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<h1 class="text-2xl font-bold mb-4">Trang chủ</h1>
<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 overflow-auto h-full" style="-ms-overflow-style: none; /* Cho IE và Edge */ scrollbar-width: none;">
    <style>
        div::-webkit-scrollbar {
            display: none; /* Cho Chrome, Safari, và Opera */
        }
    </style>
    <div class="bg-white p-4 rounded-lg shadow">
        <h3 class="text-lg font-semibold">
            Hàng ngày
        </h3>
        <p class="text-2xl font-bold">
            @ViewBag.DailyRevenue ₫
        </p>
        <div class="flex items-center justify-between mt-2">
            <span class="@(int.Parse(ViewBag.DailyRevenueChange) > 0? "text-green-500" : "text-red-500") text-xl">
                @(int.Parse(ViewBag.DailyRevenueChange) > 0? "+" + ViewBag.DailyRevenueChange : ViewBag.DailyRevenueChange)
            </span>
            <span class="text-gray-500">
                %
            </span>
        </div>
    </div>

    <div class="bg-white p-4 rounded-lg shadow">
        <h3 class="text-lg font-semibold">
            Hàng tuần
        </h3>
        <p class="text-2xl font-bold">
            @ViewBag.WeeklyRevenue ₫
        </p>
        <div class="flex items-center justify-between mt-2">
            <span class="@(int.Parse(ViewBag.WeeklyRevenueChange) > 0? "text-green-500" : "text-red-500") text-xl">
                @(int.Parse(ViewBag.WeeklyRevenueChange) > 0? "+" + ViewBag.WeeklyRevenueChange : ViewBag.WeeklyRevenueChange)
            </span>
            <span class="text-gray-500">
                %
            </span>
        </div>
    </div>

    <div class="bg-white p-4 rounded-lg shadow">
        <h3 class="text-lg font-semibold">
            Hàng tháng
        </h3>
        <p class="text-2xl font-bold">
            @ViewBag.MonthlyRevenue ₫
        </p>
        <div class="flex items-center justify-between mt-2">
            <span class="@(int.Parse(ViewBag.MonthlyRevenueChange) > 0? "text-green-500" : "text-red-500") text-xl">
                @(int.Parse(ViewBag.MonthlyRevenueChange) > 0? "+" + ViewBag.MonthlyRevenueChange : ViewBag.MonthlyRevenueChange)
            </span>
            <span class="text-gray-500">
                %
            </span>
        </div>
    </div>

    <div class="bg-white p-4 rounded-lg shadow">
        <h3 class="text-lg font-semibold">
            Hàng năm
        </h3>
        <p class="text-2xl font-bold">
            @ViewBag.YearlyRevenue ₫
        </p>
        <div class="flex items-center justify-between mt-2">
            <span class="@(int.Parse(ViewBag.YearlyRevenueChange) > 0? "text-green-500" : "text-red-500") text-xl">
                @(int.Parse(ViewBag.YearlyRevenueChange) > 0? "+" + ViewBag.YearlyRevenueChange : ViewBag.YearlyRevenueChange)
            </span>
            <span class="text-gray-500">
                %
            </span>
        </div>
    </div>

    <div class="bg-white p-6 rounded-lg mb-6 shadow h-[60vh]">
        <h3 class="text-lg font-semibold">Lợi nhuận theo từng năm</h3>
        <canvas id="monthlyProfitChart"></canvas>
    </div>

    <div class="bg-white p-6 rounded-lg mb-6 shadow h-[60vh]">
        <h3 class="text-lg font-semibold ">Xu hướng lợi nhuận theo từng ngày trong tháng</h3>
        <canvas id="dailyProfitChart"></canvas>
    </div>

    <div class="bg-white p-6 rounded-lg mb-6 shadow h-[60vh]">
        <h3 class="text-lg font-semibold">Phân bổ loại sản phẩm theo tháng</h3>
        <canvas id="productPieChart"></canvas>
    </div>
    <div class="bg-white p-6 rounded-lg mb-6 shadow h-[60vh] flex flex-col">
        <!-- Phần hiển thị biểu đồ số lượng hóa đơn theo tháng -->
        <div class="flex-1">
            <h3 class="text-lg font-semibold mb-4">Số lượng hóa đơn theo tháng</h3>
            <canvas id="monthlyInvoiceChart" class="w-full h-full"></canvas>
        </div>

        <!-- Phần hiển thị số lượng đơn khiếu nại đã xử lý / tổng đơn -->
        <div class="flex flex-col items-center justify-center">
            <h3 class="text-lg font-semibold mb-4">Đơn khiếu lại</h3>
            <div class="relative w-32 h-32">
                <!-- Vòng tròn SVG -->
                <svg class="w-full h-full transform -rotate-90">
                    <!-- Nền vòng tròn -->
                    <circle cx="64" cy="64" r="50" stroke="#e5e7eb" stroke-width="10" fill="none" />
                    <!-- Tiến trình -->
                    <circle id="progressCircle"
                            cx="64" cy="64" r="50"
                            stroke="#10b981" stroke-width="10"
                            fill="none"
                            stroke-linecap="round"
                            stroke-dasharray="314"
                            stroke-dashoffset="314" 
                            class="transition-all duration-2000 ease-out"
                    />
                </svg>
                <!-- Nội dung giữa vòng tròn -->
                <div class="absolute inset-0 flex flex-col items-center justify-center">
                    <p class="text-2xl font-bold">
                        <span id="resolvedComplaints">@ViewBag.Resolved</span> /
                        <span id="totalComplaints">@ViewBag.Total</span>
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

    <!-- Right Sidebar -->

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Dữ liệu từ Controller
        var monthlyProfit = @Html.Raw(ViewBag.MonthlyProfit);
        var dailyProfit = @Html.Raw(ViewBag.DailyProfit);
        var productPieChart = @Html.Raw(ViewBag.ProductPieChart);
        console.log(@Html.Raw(ViewBag.ProductPieChart));

        // Biểu đồ cột - Lợi nhuận theo từng tháng
        new Chart(document.getElementById("monthlyProfitChart"), {
            type: "bar",
            data: monthlyProfit
        });

        // Biểu đồ đường - Xu hướng lợi nhuận theo ngày
        new Chart(document.getElementById("dailyProfitChart"), {
            type: "line",
            data: dailyProfit
        });

        // Biểu đồ tròn - Phân bổ loại sản phẩm theo tháng
        new Chart(document.getElementById("productPieChart"), {
            type: "pie",
            data: productPieChart
        });

          const ctx = document.getElementById('monthlyInvoiceChart').getContext('2d');

    const monthlyInvoiceChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: [
                'Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4',
                'Tháng 5', 'Tháng 6', 'Tháng 7', 'Tháng 8',
                'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12'
            ],
            datasets: [{
                label: 'Số lượng hóa đơn',
                data: @Html.Raw(Json.Encode(ViewBag.MonthlyInvoiceData)), // danh sách 12 số
                backgroundColor: '#3B82F6',
                borderRadius: 6,
                barPercentage: 0.6
            }]
        },
        options: {
            responsive: true,
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        stepSize: 5
                    }
                }
            },
            plugins: {
                legend: {
                    display: false
                },
                tooltip: {
                    callbacks: {
                        label: (context) => ` ${context.parsed.y} đơn`
                    }
                }
            }
        }
    });
    });

    $(document).ready(function () {
        var resolved = parseInt($('#resolvedComplaints').text());
        var total = parseInt($('#totalComplaints').text());

        var percent = total > 0 ? (resolved / total) * 100 : 0;
        var circle = document.getElementById('progressCircle');
        var radius = 50;
        var circumference = 2 * Math.PI * radius;

        var offset = circumference - (percent / 100) * circumference;

        // Đặt lại dashoffset để tạo hiệu ứng chạy
        if (circle) {
            setTimeout(function () {
                circle.style.strokeDashoffset = offset;
            }, 500); // Delay nhẹ để đảm bảo DOM apply transition
        }
    });

</script>


