@model List<QLyNhaHangTDeli.Models.OrderDetail>

<h2 class="text-xl font-bold mb-4">
    CHI TIẾT ĐƠN HÀNG
</h2>
<table class="w-full table-fixed">
    <thead class="sticky top-0 z-10">
        <tr>
            <th class="w-[35%] pb-2 text-left ">Sản phẩm</th>
            <th class="w-[25%] pb-2 text-center">Số lượng</th>
            <th class="w-[30%] pb-2 text-center">Giá</th>
            <th class="w-[10%] pb-2"></th>
        </tr>
    </thead>
</table>
<div class="h-[200px] overflow-y-auto invisible-scrollbar">
    <table class="w-full table-fixed" id="tableOrder">
        <tbody>

            @foreach (var item in Model)
            {
                <tr class="border-b" data-id="@item.OrderDetailID">
                    <td class="w-[40%] py-2 align-top ">@item.Product.ProductName</td>
                    <td class="w-[20%] py-2 align-top">
                        <div class="flex justify-center items-center quantity-control" data-id="@item.OrderDetailID">
                            <button class="btn-decrease  px-2 py-1">-</button>
                            <span class="px-2 quantity-value">@item.Quantity</span>
                            <button class="btn-increase  px-2 py-1">+</button>
                        </div>
                    </td>
                    <td class="w-[30%] py-2 text-red-500 align-top text-center">
                        @String.Format("{0:N0}", item.Product.Price) ₫
                    </td>
                    <td class="w-[10%] py-2 align-top text-center">
                        <button class="text-red-500 delete-order-item-btn" data-id="@item.OrderDetailID">
                            <i class="fas fa-trash-alt"></i>
                        </button>
                    </td>
                </tr>
            }

        </tbody>
    </table>
</div>
<div class="flex justify-between items-center mb-4">
    <p class="text-md font-bold">
        Thành tiền:
    </p>
    @{
        var culture = new System.Globalization.CultureInfo("vi-VN");
        var tongTien = Model.Sum(item => item.Quantity * item.Product.Price);
    }
    <p class="text-md font-bold " id="totalPrice" data-price="@tongTien">

        @String.Format(culture, "{0:N0}", tongTien) ₫

    </p>
</div>

<div class="flex justify-between items-center mb-4">
    <p class="text-md font-bold">Thông tin nhận hàng:</p>

    <!-- Icon để hiển thị modal -->
    <p id="summaryAddress" class="text-gray-700 text-sm mr-2 truncate max-w-xs overflow-hidden whitespace-nowrap cursor-pointer">
        <!-- Sẽ được gán động hoặc render sẵn -->
        Chọn thông tin nhận hàng
        <i class="fas fa-chevron-right text-md"></i>
    </p>

</div>
<div class="flex justify-between items-center mb-4">
    @{
        var cusId = QLyNhaHangTDeli.Services.AuthHelper.GetUserID(); // hoặc cách lấy cusId phù hợp với hệ thống của bạn
    }



    @if (cusId != "QUEST001")
    {

        <p class="text-md font-bold coupon" data-id="@cusId">
            Mã giảm giá:
        </p>
        <div class="flex-1 ml-3">
            <input list="discountCodesList"
                   id="discountCode"
                   name="discountCode"
                   autocomplete="off"
                   placeholder="Nhập hoặc chọn mã"
                   class="w-full px-4 py-1 border rounded focus:outline-none focus:ring-2 focus:ring-green-400" />

            <datalist id="discountCodesList"></datalist>
        </div>
    }

</div>
<div class="flex justify-between items-center mb-4">
    <p class="text-md font-bold">
        Giảm  giá:
    </p>
    <p class="text-md font-bold " id="discountPrice">
        0 đ

    </p>
</div>
<div class="flex justify-between items-center mb-4">
    <p class="text-md font-bold">
        Phí vận chuyển:
    </p>
    <p class="text-md font-bold " id="shipPrice" data-price="0">
        0 đ

    </p>
</div>
<div class="flex justify-between items-center mb-4">
    <p class="text-md font-bold">
        Tổng cộng:
    </p>
    <p class="text-md font-bold text-red-600" id="finalPrice">
        @{
            var discount = 0;
            var total = Model.Sum(item => item.Quantity * item.Product.Price) - discount;
        }
        @String.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:N0}", total) ₫

    </p>
</div>
<div class="flex items-center gap-2 mb-4">
    <input type="checkbox" id="payOnDelivery" class="w-5 h-5 accent-green-600">
    <label for="payOnDelivery" class="text-sm font-medium text-gray-700">
        Thanh toán khi nhận hàng
    </label>
</div>
<div class="flex justify-between gap-2">
    <button id="btnDatHang" class="w-full bg-red-600 text-white py-2 rounded-lg font-bold">
        ĐẶT HÀNG
    </button>
    <button id="cancelOrderBtn" class="w-full border border-red-600  py-2 rounded-lg font-bold">
        HUỶ
    </button>
</div>
<script>

    window.addEventListener('beforeunload', function () {
        localStorage.removeItem("savedCustomerInfo");
    });
    $(document).ready(function () {
        var orderId = $('#prdDetail').data("order-id");

        $(".btn-increase").on("click", function () {
            const container = $(this).closest(".quantity-control");
            const orderDetailId = container.data("id");

            $.post("/Orders/IncreaseQuantity", { id: orderDetailId, orderId: orderId }, function (res) {
                if (res.success) {
                    container.find(".quantity-value").text(res.newQuantity);
                    updateTotals(res.totalPrice, res.finalPrice);
                    $("#cartSummary span").text(Number(res.finalPrice).toLocaleString("vi-VN") + " ₫");
                    $("#discountCode").val('');
                    $("#discountPrice").text("0 ₫");
                } else {
                    Swal.fire("Lỗi", res.message || "Không thể tăng số lượng", "error");
                }
            });
        });

        $(".btn-decrease").on("click", function () {
            const container = $(this).closest(".quantity-control");
            const orderDetailId = container.data("id");

            $.post("/Orders/DecreaseQuantity", { id: orderDetailId, orderId: orderId }, function (res) {
                if (res.success) {
                    container.find(".quantity-value").text(res.newQuantity);
                    updateTotals(res.totalPrice, res.finalPrice);
                    $("#cartSummary span").text(Number(res.finalPrice).toLocaleString("vi-VN") + " ₫");
                    $("#discountCode").val('');
                    $("#discountPrice").text("0 ₫");

                } else {
                    Swal.fire("Lỗi", res.message || "Không thể giảm số lượng", "error");
                }
            });
        });

        function updateTotals(totalPrice, finalPrice) {
            $("#totalPrice").text(Number(totalPrice).toLocaleString("vi-VN") + " ₫");
            $("#finalPrice").text(Number(finalPrice).toLocaleString("vi-VN") + " ₫");
        }

        $(document).on('click', '.delete-order-item-btn', function () {
            const id = $(this).data('id');

            Swal.fire({
                title: 'Bạn có chắc muốn xoá sản phẩm này?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Xoá',
                cancelButtonText: 'Huỷ'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Orders/DeleteOrderDetail',
                        method: 'POST',
                        data: { id: id },
                        success: function (res) {
                            if (res.success) {
                                Swal.fire('Đã xoá!', '', 'success').then(() => {

                                    $("#discountCode").val('');
                                    $("#discountPrice").text("0 ₫");

                                    $(`tr[data-id="${id}"]`).remove();

                                    // Kiểm tra xem bảng còn sản phẩm không
                                    if ($("#tableOrder tbody tr").length === 0) {
                                        $("#tableOrder tbody").html(`<tr><td colspan="4" class="text-center py-4 text-gray-500">Không có sản phẩm nào</td></tr>`);
                                    }

                                    // Reset lại tổng số lượng và giá (tùy theo res trả về)
                                    updateTotals(res.totalPrice, res.finalPrice);


                                    // Nếu cần, gọi lại loadIconOrder
                                    loadIconOrder(res.orderId);
                                });
                            } else {
                                Swal.fire('Lỗi!', res.message, 'error');
                            }
                        },
                        error: function () {
                            Swal.fire('Lỗi!', 'Không thể xoá sản phẩm.', 'error');
                        }
                    });
                }
            });
        });

        function loadIconOrder(orderId) {

            $.get('/Orders/GetProductCount', { orderId: orderId }, function (res) {
                if (res.success && res.count > 0) {
                    const badge = `
                 <span class="order-badge absolute -top-1 -right-1 bg-red-500 text-white text-xs font-semibold rounded-full w-5 h-5 flex items-center justify-center">
                     ${res.count}
                 </span>`;
                    $(".view-order-detail-btn").append(badge);
                    let totalFormatted = parseFloat(res.total).toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
                    //console.log("res.total:", res.total);

                    $("#cartSummary p").text(`${res.count} - `);
                    $("#cartSummary span").text(`${totalFormatted}`);
                }
                else {
                    $("#cartSummary p").text("0 -");
                    $("#cartSummary span").text("0 ₫");
                }
            });
        }

        $("#btnDatHang").on("click", function () {
            const isCOD = $("#payOnDelivery").is(":checked");

            const customerInfo = JSON.parse(localStorage.getItem("savedCustomerInfo") || "{}");
            const fullName = customerInfo.fullName || "";
            const email = customerInfo.email || "";
            const phone = customerInfo.phone || "";
            const address = customerInfo.address || "";
            
            var shipPrice = $("#shipPrice").text().trim();
            var discountCode = ($("#discountCode").val() || "").trim();
            
            
            if (isCOD) {
                // Nếu chọn thanh toán khi nhận hàng
                $.ajax({
                    url: "/Orders/MarkAsPaid",
                    type: "POST",
                    data: {
                        orderId: orderId,// hoặc truyền đúng id đơn hàng
                        isCOD: true,
                        address: address,
                        fullName: fullName,
                        email: email,
                        phone: phone,
                        discountCode: discountCode
                    },
                    success: function (res) {
                        if (res.success) {
                            $.ajax({
                                url: '/Orders/SendOrderStatusEmail',
                                type: 'POST',
                                data: { orderId: res.orderId }, // đảm bảo controller nhận được orderId
                                success: function () {
                                    Swal.fire({
                                        icon: "success",
                                        title: "Đặt hàng thành công!",
                                        text: "Phương thức: thanh toán khi nhận hàng",
                                        confirmButtonColor: "#3085d6"
                                    }).then(() => {

                                        window.location.href = "/Home/Index";

                                    });
                                },
                                error: function () {
                                    Swal.fire({
                                        icon: "error",
                                        title: "Lỗi khi gửi email!",
                                        text: "Đơn hàng vẫn được ghi nhận, nhưng email không thể gửi.",
                                        confirmButtonColor: "#d33"
                                    });
                                },
                            });
                               
                        } else {
                            Swal.fire("Lỗi", res.message, "error");
                        }
                    }
                });
            } else {
                const orderId = $('#orderDetailBtn').data('order-id');
                $.get('/Orders/CreatePaymentUrlVnpay', {
                    orderId: orderId,
                    address: address,
                    fullName: fullName,
                    email: email,
                    phone: phone,
                    discountCode: discountCode
                }, function (res) {
                    if (res.success) {
                        window.location.href = res.paymentUrl; // Chuyển hướng người dùng đến VNPAY
                    } else {
                        Swal.fire("Lỗi", "Không thể tạo liên kết thanh toán", "error");
                    }
                });
            }
        });



        $('#cancelOrderBtn').click(function () {
            Swal.fire({
                title: 'Xác nhận huỷ đơn?',
                text: 'Đơn hiện tại sẽ bị xoá!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Đồng ý',
                cancelButtonText: 'Không'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Orders/DeleteCurrentOrder', // hoặc route tương ứng
                        type: 'POST',
                        data: {
                            orderId: orderId // giả sử bạn có OrderID trong Model
                        },
                        success: function () {
                            Swal.fire({
                                icon: 'success',
                                title: 'Huỷ đơn thành công!',
                                showConfirmButton: false,
                                timer: 2000
                            }).then(() => {
                                location.reload();
                            });
                        },
                        error: function () {
                            Swal.fire('Lỗi', 'Không thể huỷ đơn', 'error');
                        }
                    });
                }
            });
        });
        function fetchDiscountCodes() {
            const query = $("#discountCode").val().trim(); // có thể rỗng
            const cusID = $(".coupon").data("id");

            $.get("/DiscountCodes/Search", { query: query, customerId: cusID }, function (res) {
                if (res.success) {
                    let options = "";
                    res.codes.forEach(code => {
                        options += `<option value="${code}">`;
                    });
                    $("#discountCodesList").html(options);
                }
            });
        }

        // Gọi khi người dùng focus hoặc nhập
        $("#discountCode").on("input focus", fetchDiscountCodes);

        $("#discountCode").on("change", function () {
            const code = $(this).val().trim();
            const orderId = $('#prdDetail').data("order-id");
            const cusID = $(".coupon").data("id");

            const originalPrice = Number($("#totalPrice").data("price")) || 0;
            const shipPrice = Number($("#shipPrice").data("price")) || 0;

            if (code) {
                $.post("/Orders/Apply", { code: code, orderId: orderId, customerId: cusID }, function (res) {
                    if (res.success) {
                        $("#finalPrice").text(Number(res.finalPrice).toLocaleString("vi-VN") + " ₫");
                        $("#discountPrice").text(Number(res.discountAmount).toLocaleString("vi-VN") + " ₫");
                        if (typeof res.shipPrice !== "undefined" && res.shipPrice !== null) {
                            $("#shipPrice")
                                .text(Number(res.shipPrice).toLocaleString("vi-VN") + " ₫")
                                .data("price", Number(res.shipPrice)); // nhớ cập nhật data-price
                        } else {
                            $("#shipPrice")
                                .text("0 ₫")
                                .data("price", 0);
                        }

                        Swal.fire("Áp dụng thành công!", "Mã giảm giá đã được áp dụng.", "success");
                    } else {
                        $("#discountPrice").text("0 ₫");
                        $("#finalPrice").text((originalPrice + shipPrice).toLocaleString("vi-VN") + " ₫"); // 👈 Reset tổng

                        Swal.fire("Không hợp lệ", res.message || "Mã giảm giá không đúng hoặc đã hết hạn.", "error").then(() => {
                            $("#discountCode").val('');
                        });
                    }
                });
            } else {
                // 👈 Nếu xóa trắng mã
                $("#discountPrice").text("0 ₫");
                $("#finalPrice").text((originalPrice + shipPrice).toLocaleString("vi-VN") + " ₫");
            }
        });


        $('#summaryAddress').on('click', function () {
            const savedData = localStorage.getItem("savedCustomerInfo");

            if (savedData) {
                const data = JSON.parse(savedData);
                $('#boxModal').removeClass('hidden');

                if ($('#modalContent').is(':empty')) {
                    $.get('/Orders/GetInforCus', function (html) {
                        $('#modalContent').empty().html(html);
                        // Gán giá trị vào form
                        $("#FullName").val(data.fullName);
                        $("#Email").val(data.email);
                        $("#Phone").val(data.phone);
                        $("#Address").val(data.address);
                    });
                } else {
                    // Nếu đã có layout rồi thì gán trực tiếp
                    $("#FullName").val(data.fullName);
                    $("#Email").val(data.email);
                    $("#Phone").val(data.phone);
                    $("#Address").val(data.address);
                }
            } else {
                // Nếu không có trong localStorage thì gọi lại từ server
                $.get('/Orders/GetInforCus', function (html) {
                    $('#modalContent').html(html);
                    $('#boxModal').removeClass('hidden');
                });
            }
        });

    })
</script>
